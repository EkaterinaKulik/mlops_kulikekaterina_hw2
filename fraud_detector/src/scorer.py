# -*- coding: utf-8 -*-
"""scorer.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18RIRYukk9NXNbK6HmJd_am2tkNriBqGR
"""

import os
from pathlib import Path
from typing import Optional

import pandas as pd
from catboost import CatBoostClassifier
import urllib.request

MODEL_URL: str = os.getenv(
    "MODEL_URL",
    "https://github.com/EkaterinaKulik/mlops_kulikekaterina_hw1/releases/download/model_v1/model.cbm"
)

MODEL_PATH: str = os.getenv("MODEL_PATH", "./models/model.cbm")

DEFAULT_THRESHOLD: float = float(os.getenv("FRAUD_THRESHOLD", "0.5"))

_MODEL: Optional[CatBoostClassifier] = None

def _ensure_model_local() -> None:
    model_file = Path(MODEL_PATH)
    model_file.parent.mkdir(parents=True, exist_ok=True)
     if not model_file.exists() or model_file.stat().st_size == 0:
        urllib.request.urlretrieve(MODEL_URL, model_file)


def _load_model_once() -> CatBoostClassifier:

    global _MODEL
    if _MODEL is None:
        _ensure_model_local()
        model = CatBoostClassifier()
        model.load_model(MODEL_PATH)
        _MODEL = model
    return _MODEL


def score_one(X_row_df: pd.DataFrame) -> float:

    model = _load_model_once()
    proba = model.predict_proba(X_row_df)[:, 1][0]
    return float(proba)


def is_fraud(score: float, threshold: Optional[float] = None) -> int:
    thr = DEFAULT_THRESHOLD if threshold is None else float(threshold)
    return int(float(score) >= thr)